version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: my-laravel-app
    container_name: api-laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./.env:/var/www/.env
    environment:
      - APP_ENV=local
    networks:
      - laravel-app-network

  nginx:
    image: nginx:alpine
    container_name: api-nginx
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - laravel-app-network 
      
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: laravel
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel-app-network
    ports:
      - "3306:3306"
  
  phpmyadmin:
    image: phpmyadmin
    container_name: api-phpmyadmin
    restart: always
    ports:
      - 8080:80
    networks:
      - laravel-app-network
      
  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    ports:
      - "1025:1025" # SMTP Server
      - "8025:8025" # Web Interface
    restart: unless-stopped
    networks:
      - laravel-app-network

  frontend:
    image: node:18
    container_name: vue-frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "5173:5173"
    command: ["sh", "-c", "npm install && npm run dev"]
    networks:
      - laravel-app-network

  redis:
    image: redis:alpine
    container_name: api-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - laravel-app-network

# Redis queue worker
  queue:
    build:
      context: .
    container_name: redis-queue-worker
    command: php artisan queue:work
    volumes:
      - .:/var/www
    networks:
      - laravel-app-network
    depends_on:
      - app
      - redis
  
# Redis UI
  redisinsight:
    image: redislabs/redisinsight:1.14.0
    container_name: redis-ui
    ports:
      - "8001:8001"
    depends_on:
      - redis
    networks:
      - laravel-app-network

networks:
  laravel-app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
  redis-data: